#!/bin/bash

# ANSI color codes (no need for \[ \] here)
RESET='\033[0m'
BOLD='\033[1m'
BLUE='\033[34m'
GREY='\033[38;5;244m'
RED='\033[31m'
YELLOW='\033[33m'

# Git branch
__git_branch() {
  local branch
  branch=$(git symbolic-ref --short -q HEAD 2>/dev/null)
  [ -n "$branch" ] && echo -n "$branch"
}

# Git status
__git_status() {
  git rev-parse --is-inside-work-tree &>/dev/null || return

  local status=""
  if ! git symbolic-ref -q HEAD > /dev/null; then
    status+=" ðŸ”€"
  elif [ -n "$(git status --porcelain 2>/dev/null)" ]; then
    status+=" âœ—"
  fi

  echo -n "$status"
}

# Show SSH host
__host_prefix() {
  if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
    echo -n "$USER@$(hostname):"
  fi
}

# Build prompt
__prompt() {
  local host="$(__host_prefix)"
  local path=$(dirs +0)

  local branch="$(__git_branch)"
  local status="$(__git_status)"

  # Combine lengths
  local host_len=${#host}
  local path_len=${#path}
  local branch_len=${#branch}
  local status_len=${#status}
  local total_len=$((host_len + path_len + branch_len + status_len))

  local limit=40
  local newline=""
  local path_prefix=""
  local git_prefix=""

  if [ -n "$branch" ]; then
    git_prefix=" "
  fi

  if (( total_len > limit )); then
    newline="\n"
    path_prefix="â†’ "

    if [ -n "$branch" ]; then
      git_prefix="  "
    fi
  fi

  echo -e "${path_prefix}${host}${BLUE}${BOLD}${path}${RESET}${newline}"\
"${YELLOW}${git_prefix}${branch}${RESET}"\
"${RED}$(echo "$status" | grep âœ—)${RESET}"\
"${YELLOW}$(echo "$status" | grep ðŸ”€)${RESET}"\
"${GREY} >>> ${RESET}"
}

# Set prompt
PS1='$(__prompt)'
